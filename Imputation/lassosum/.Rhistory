anno = read.table("~/projects/OTTERS/Data/RDA/GTEx_V8/Anno/CHR4_GeneAnno_GRCh38.txt", header = T)
View(anno)
anno_sub = anno[anno$TargetID == "ENSG00000186352", ]
write.table(anno_sub, "~/projects/OTTERS/Data/RDA/GTEx_V8/Anno/CHR4_bug.txt",
quote = F,
row.names= F,
col.names= T,
sep = "\t",
append = F)
cor_gene <- function(i, True, Pred){
true_exp = unlist(True[i,6:ncol(True)])
pred_exp = unlist(Pred[i,6:ncol(True)])
lm_exp = lm(true_exp ~ pred_exp)
# cor = cor(unlist(True[i,6:ncol(True)]),unlist(Pred[i,6:ncol(True)]))
# r2 = cor^2
return(summary(lm_exp)$r.squared)
}
cor_pred <- function(pred_dir){
pred = read.table(pred_dir, header = T, check.names = F, fill = T)
cleanid <- function(gtex_id) sapply(strsplit(gtex_id, "\\."), "[", 1L)
pred$TargetID <- cleanid(pred$TargetID)
predicted = rowSums(is.na(pred))
print(sum(predicted>20))
pred = pred[predicted==0, ]
ID = intersect(pred$TargetID, true$TargetID)
row.names(pred) = pred$TargetID
sub_pred = pred[ID, ]
sub_true = true[ID, colnames(pred)]
res_cor = t(sapply(1:nrow(sub_pred), function(i) cor_gene(i, sub_true, sub_pred)))
names(res_cor) = ID
return(res_cor)
}
calculate_R2 = function(methods, chr){
if (methods %in% c("PRScs", "Lassosum", "DPR", "FUSION")) {
res.dir = file.path(GTEx_V8.dir, paste0(methods, "_GReX"),
paste0("CHR", chr), paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else if (methods == "PT(0.001)") {
res.dir = file.path(GTEx_V8.dir,
"PT_GReX",
paste0("GTEx_CHR", chr, "_clump", clump, "_p0.001"),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else if (methods == "PT(0.05)") {
res.dir = file.path(GTEx_V8.dir,
"PT_GReX",
paste0("GTEx_CHR", chr, "_clump", clump, "_p0.05"),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else if (methods == "SDPR") {
res.dir = file.path(GTEx_V8.dir,
"SDPR_GReX_nostd",
paste0("CHR", chr),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
}
res_cor = cor_pred(res.dir)
res_df = data.frame(names(res_cor), as.numeric(res_cor))
colnames(res_df) = c("TargetID", methods)
return(res_df)
}
compare_R2_tab = function(res, method1, method2){
sub_res = res[, c("TargetID", method1, method2)]
colnames(sub_res) = c("TargetID", "M1", "M2")
sub_res = sub_res %>% mutate(col = case_when(
M1 >=0.01 & M2 <0.01 ~ "g1",
M1 <0.01 & M2 >=0.01 ~ "g2",
M1 >=0.01 & M2 >=0.01 ~ "g3",
)) %>% filter(M1 >=0.01 | M2 >= 0.01)
p1 = ggplot(sub_res, aes(x=M1, y=M2, color = col)) +
geom_point(show.legend = FALSE, size = 3) +
scale_x_continuous(trans = "sqrt", breaks = c(0,0.01,0.1,0.2,0.4,0.5), limits = c(0, 0.65)) +
scale_y_continuous(trans = "sqrt", breaks = c(0,0.01,0.1,0.2,0.4,0.5), limits = c(0, 0.65)) +
geom_abline(intercept = 0, slope = 1, color="black", linetype = "dotdash") +
labs(x = method1, y = method2, title = " ") +
theme(text = element_text(size=18))
return(p1)
}
library(dplyr)
library(ggplot2)
clump=0.99
chr=3
true.dir <- "~/YangFSSdata2/qdai/BS_TWAS/Data/RDA/GTEx_V8/ExpressionFiles/"
true_exp_dir = paste0(true.dir, "Whole_Blood_GTEx_Exp_chr",
chr, "_315TestSamples.txt")
true = read.table(true_exp_dir, header = T, check.names = F)
row.names(true) = true$TargetID
GTEx_V8.dir = "~/YangFSSdata2/qdai/BS_TWAS/Data/RDA/GTEx_V8"
Lassosum = calculate_R2("Lassosum", chr)
GTEx_V8.dir = "~/YangFSSdata2/qdai/BS_TWAS/DoubleCheck/"
calculate_R2 = function(methods, chr){
if (methods %in% c("PRScs", "Lassosum", "DPR", "FUSION")) {
res.dir = file.path(GTEx_V8.dir, paste0(methods, "_GReX"),
paste0("CHR", chr), paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else if (methods == "PT(0.001)") {
res.dir = file.path(GTEx_V8.dir,
"PT_GReX",
paste0("GTEx_CHR", chr, "_clump", clump, "_p0.001"),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else if (methods == "PT(0.05)") {
res.dir = file.path(GTEx_V8.dir,
"PT_GReX",
paste0("GTEx_CHR", chr, "_clump", clump, "_p0.05"),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else if (methods == "SDPR") {
res.dir = file.path(GTEx_V8.dir,
"SDPR_GReX_nostd",
paste0("CHR", chr),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
} else {
res.dir = file.path("~/YangFSSdata2/qdai/BS_TWAS/DoubleCheck",
paste0("CHR", chr),
paste0("Pred_CHR", chr),
paste0("CHR", chr, "_Pred_GReX.txt"))
}
res_cor = cor_pred(res.dir)
res_df = data.frame(names(res_cor), as.numeric(res_cor))
colnames(res_df) = c("TargetID", methods)
return(res_df)
}
compare_R2_tab = function(res, method1, method2){
sub_res = res[, c("TargetID", method1, method2)]
colnames(sub_res) = c("TargetID", "M1", "M2")
sub_res = sub_res %>% mutate(col = case_when(
M1 >=0.01 & M2 <0.01 ~ "g1",
M1 <0.01 & M2 >=0.01 ~ "g2",
M1 >=0.01 & M2 >=0.01 ~ "g3",
)) %>% filter(M1 >=0.01 | M2 >= 0.01)
p1 = ggplot(sub_res, aes(x=M1, y=M2, color = col)) +
geom_point(show.legend = FALSE, size = 3) +
scale_x_continuous(trans = "sqrt", breaks = c(0,0.01,0.1,0.2,0.4,0.5), limits = c(0, 0.65)) +
scale_y_continuous(trans = "sqrt", breaks = c(0,0.01,0.1,0.2,0.4,0.5), limits = c(0, 0.65)) +
geom_abline(intercept = 0, slope = 1, color="black", linetype = "dotdash") +
labs(x = method1, y = method2, title = " ") +
theme(text = element_text(size=18))
return(p1)
}
library(dplyr)
library(ggplot2)
clump=0.99
GTEx_V8.dir = "~/YangFSSdata2/qdai/BS_TWAS/Data/RDA/GTEx_V8"
Lassosum_new = calculate_R2("Lassosum_new", chr)
View(Lassosum_new)
View(Lassosum)
View(Lassosum_new)
View(Lassosum)
res = merge(Lassosum, Lassosum_new, by = "TargetID")
View(res)
plot(res$Lassosum, res$Lassosum_new)
